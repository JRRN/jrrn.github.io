I"(<p>El patrón Specification es un patrón orientando a las aplicaciones con dominio. Es un patrón muy útil para validar queries y orientado a encapsular los objetos que pueden usarse en estas queries.</p>

<p>Es un patrón que separa la responsabilidad entre los objetos a recuperar y como los obtenemos.</p>

<p>Vamos con el ejemplo, que siempre es más claro:</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">public</span> <span class="k">interface</span> <span class="nc">ISpecification</span><span class="p">&lt;</span><span class="n">TEntity</span><span class="p">&gt;</span>
<span class="p">{</span>
    <span class="kt">bool</span> <span class="nf">IsSatisfiedBy</span><span class="p">(</span><span class="n">TEntity</span> <span class="n">candidate</span><span class="p">);</span>
<span class="p">}</span>

<span class="k">public</span> <span class="k">abstract</span> <span class="k">class</span> <span class="nc">Specification</span><span class="p">&lt;</span><span class="n">TEntity</span><span class="p">&gt;</span> <span class="p">:</span> <span class="n">ISpecification</span><span class="p">&lt;</span><span class="n">TEntity</span><span class="p">&gt;</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="k">abstract</span> <span class="kt">bool</span> <span class="nf">IsSatisfiedBy</span><span class="p">(</span><span class="n">TEntity</span> <span class="n">candidate</span><span class="p">);</span>
<span class="p">}</span>

<span class="k">public</span> <span class="k">class</span> <span class="nc">LibrosPorTemaSpecification</span> <span class="p">:</span> <span class="n">Specification</span><span class="p">&lt;</span><span class="n">Book</span><span class="p">&gt;</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="k">override</span> <span class="kt">bool</span> <span class="nf">IsSatisfiedBy</span><span class="p">(</span><span class="n">Book</span> <span class="n">candidate</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">return</span> <span class="p">(</span><span class="n">candidate</span><span class="p">.</span><span class="n">Tema</span><span class="p">.</span><span class="nf">Any</span><span class="p">(</span><span class="n">x</span> <span class="p">=&gt;</span> <span class="n">x</span><span class="p">.</span><span class="n">Tema</span><span class="p">));</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="k">public</span> <span class="n">Book</span> <span class="p">{</span>
    <span class="k">public</span> <span class="kt">bool</span> <span class="n">ContainsLibrosPorTema</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;}</span>
<span class="p">}</span>

<span class="k">public</span> <span class="k">class</span> <span class="nc">Main</span> <span class="p">{</span>
    <span class="k">public</span> <span class="kt">bool</span> <span class="nf">HayLibroDeEsteTema</span><span class="p">(</span><span class="kt">string</span> <span class="n">tema</span><span class="p">){</span>
        <span class="kt">var</span> <span class="n">book</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Book</span><span class="p">{</span>
            <span class="n">Tema</span> <span class="p">=</span> <span class="n">tema</span>
        <span class="p">};</span>

        <span class="n">List</span><span class="p">&lt;</span><span class="n">Books</span><span class="p">&gt;</span> <span class="n">repositoryBooks</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">bookRepository</span><span class="p">().</span><span class="nf">GetAll</span><span class="p">();</span>

        <span class="k">if</span> <span class="p">(</span><span class="n">repositoryBooks</span><span class="p">.</span><span class="nf">Any</span><span class="p">(</span><span class="n">item</span> <span class="p">=&gt;</span> <span class="n">item</span><span class="p">.</span><span class="n">ContainsLibrosPorTema</span><span class="p">))</span>
        <span class="p">{</span>
            <span class="k">return</span> <span class="k">true</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">return</span> <span class="k">false</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p>Como vemos lo que hemos hecho es encapsular el Linq que generaríamos de forma que pasando el objeto y el método, obtenemos el resultado.</p>
:ET
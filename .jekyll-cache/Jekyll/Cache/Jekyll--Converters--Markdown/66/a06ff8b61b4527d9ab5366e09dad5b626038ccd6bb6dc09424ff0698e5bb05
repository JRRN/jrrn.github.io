I"¥'<p>El patr√≥n <strong>bridge</strong> es usado para separar la implementaci√≥n de un objeto, de su representaci√≥n y de su interfaz. As√≠, conseguimos que la implementaci√≥n de este objeto quede intacta, mientras que la representaci√≥n puede crecer de manera independiente sin que haya un acoplamiento y tengamos que hacer cambios en el objeto con estas nuevas ampliaciones.</p>

<p>Tiene cierta similitud con el patr√≥n adapter, d√°ndole una vuelta m√°s, donde adapter queda un poco limitado.</p>

<p>Para ello, a trav√©s de una clase abstracta que hereda los m√©todos de la clase base, sobrecargaremos estos m√©todos en cada clase concreta de cada tipo de libro para darle su propia implementaci√≥n sin que ello afecte a los objetos MediaBook y PaperBook.</p>

<p>Sin m√°s, vamos al ejemplo con el que se ver√° m√°s claro su estructura y comportamiento:</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">enum</span> <span class="n">TipoLibroEnum</span><span class="p">{</span>
    <span class="n">Media</span><span class="p">,</span>
    <span class="n">Paper</span>
<span class="p">};</span>

<span class="k">public</span> <span class="k">interface</span> <span class="nc">IBookBridge</span> <span class="p">{</span>
    <span class="k">void</span> <span class="nf">GenerarLibro</span><span class="p">(</span><span class="kt">string</span> <span class="n">contenido</span><span class="p">);</span>

    <span class="n">TipoLibroEnum</span> <span class="nf">TipoDeLibro</span><span class="p">();</span>
<span class="p">}</span>

<span class="k">public</span> <span class="k">class</span> <span class="nc">MediaBook</span> <span class="p">:</span> <span class="n">IBookBridge</span><span class="p">{</span>
    <span class="k">public</span> <span class="k">void</span> <span class="nf">GenerarLibro</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"Libro de Papel"</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="n">TipoLibroEnum</span> <span class="nf">TipoDeLibro</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="k">return</span> <span class="n">TipoLibroEnum</span><span class="p">.</span><span class="n">Paper</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="k">public</span> <span class="k">class</span> <span class="nc">PaperBook</span> <span class="p">:</span> <span class="n">IBookBridge</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="k">void</span> <span class="nf">GenerarLibro</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"Libro de Papel"</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="n">TipoLibroEnum</span> <span class="nf">TipoDeLibro</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="k">return</span> <span class="n">TipoLibroEnum</span><span class="p">.</span><span class="n">Paper</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="k">public</span> <span class="k">abstract</span> <span class="k">class</span> <span class="nc">GeneradorLibro</span> <span class="p">{</span>
    <span class="k">public</span> <span class="n">TipoLibroEnum</span> <span class="n">_tipoLibroEnum</span><span class="p">;</span>
    <span class="k">public</span> <span class="n">IBookBridge</span> <span class="n">_book</span><span class="p">;</span>

    <span class="k">protected</span> <span class="nf">GeneradorLibro</span><span class="p">(</span><span class="n">IBookBridge</span> <span class="n">book</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">_book</span> <span class="p">=</span> <span class="n">book</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">void</span> <span class="nf">Genera</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="n">_book</span><span class="p">.</span><span class="nf">GenerarLibro</span><span class="p">();</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="n">TipoLibroEnum</span> <span class="nf">TipoDeLibro</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="k">return</span> <span class="n">_book</span><span class="p">.</span><span class="nf">TipoDeLibro</span><span class="p">();</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">abstract</span> <span class="kt">bool</span> <span class="nf">ControlTipoLibro</span><span class="p">(</span><span class="n">TipoLibroEnum</span> <span class="n">tipoLibro</span><span class="p">);</span>
<span class="p">}</span>

<span class="k">public</span> <span class="k">class</span> <span class="nc">GeneradorLibroPapel</span> <span class="p">:</span> <span class="n">GeneradorLibro</span> <span class="p">{</span>
    <span class="k">public</span> <span class="nf">GeneradorLibroPapel</span><span class="p">(</span><span class="n">IBookBridge</span> <span class="n">book</span><span class="p">)</span> <span class="p">:</span> <span class="k">base</span><span class="p">(</span><span class="n">book</span><span class="p">)</span> <span class="p">{</span> <span class="p">}</span>

    <span class="k">public</span> <span class="k">override</span> <span class="kt">bool</span> <span class="nf">ControlTipoLibro</span><span class="p">(</span><span class="n">TipoLibroEnum</span> <span class="n">tipoLibro</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">return</span> <span class="n">tipoLibro</span> <span class="p">==</span> <span class="n">TipoLibroEnum</span><span class="p">.</span><span class="n">Paper</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="k">public</span> <span class="k">class</span> <span class="nc">GeneradorLibroElectronico</span> <span class="p">:</span> <span class="n">GeneradorLibro</span> <span class="p">{</span>
    <span class="k">public</span> <span class="nf">GeneradorLibroElectronico</span><span class="p">(</span><span class="n">IBookBridge</span> <span class="n">book</span><span class="p">)</span> <span class="p">:</span> <span class="k">base</span><span class="p">(</span><span class="n">book</span><span class="p">)</span> <span class="p">{</span> <span class="p">}</span>

    <span class="k">public</span> <span class="k">override</span> <span class="kt">bool</span> <span class="nf">ControlTipoLibro</span><span class="p">(</span><span class="n">TipoLibroEnum</span> <span class="n">tipoLibro</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">return</span> <span class="n">tipoLibro</span> <span class="p">==</span> <span class="n">TipoLibroEnum</span><span class="p">.</span><span class="n">Media</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="k">public</span> <span class="k">class</span> <span class="nc">Libreria</span><span class="p">{</span>
    <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="n">args</span><span class="p">){</span>
        <span class="n">GeneradorLibroElectronico</span> <span class="n">libroElectronico</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">GeneradorLibroElectronico</span><span class="p">(</span><span class="k">new</span> <span class="n">BridgePattern</span><span class="p">.</span><span class="nf">MediaBook</span><span class="p">());</span>

        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="n">libroElectronico</span><span class="p">.</span><span class="n">_tipoLibroEnum</span><span class="p">);</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">libroElectronico</span><span class="p">.</span><span class="nf">TipoDeLibro</span><span class="p">()</span> <span class="p">==</span> <span class="n">TipoLibroEnum</span><span class="p">.</span><span class="n">Media</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">libroElectronico</span><span class="p">.</span><span class="nf">Genera</span><span class="p">();</span>
        <span class="p">}</span>

        <span class="n">GeneradorLibroPapel</span> <span class="n">libroPapel</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">GeneradorLibroPapel</span><span class="p">(</span><span class="k">new</span> <span class="n">BridgePattern</span><span class="p">.</span><span class="nf">PaperBook</span><span class="p">());</span>

        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="n">libroPapel</span><span class="p">.</span><span class="n">_tipoLibroEnum</span><span class="p">);</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">libroPapel</span><span class="p">.</span><span class="nf">TipoDeLibro</span><span class="p">()</span> <span class="p">==</span> <span class="n">TipoLibroEnum</span><span class="p">.</span><span class="n">Paper</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">libroPapel</span><span class="p">.</span><span class="nf">Genera</span><span class="p">();</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p>Como hemos dicho, en nuestro caso de los libros la clase GeneradorLibro podr√≠a extenderse sin tener que tocar las clases MediaBook y PaperBook.</p>

<p>Saludos.</p>

:ET
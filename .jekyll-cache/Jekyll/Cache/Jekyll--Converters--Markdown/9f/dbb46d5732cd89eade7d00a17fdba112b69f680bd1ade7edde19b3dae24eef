I"<p>¿Quien no recuerda los maravillosos Configuration Provider que nos hemos montado más de una vez para albergar en un clase todas las settings de nuestra aplicación y no tener desparramado por el código el acceso a estas (de esta forma, si cambiaba una setting se centralizaba en un punto y se replicaba en todo el contexto de la aplicación)?</p>

<p>¿Qué no sabes de lo que te hablo?:</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">public</span> <span class="k">static</span> <span class="k">class</span> <span class="nc">ConfigProvider</span> <span class="p">{</span>  
    <span class="k">public</span> <span class="kt">string</span> <span class="n">Usuario</span> <span class="p">=</span> <span class="n">ConfigurationManager</span><span class="p">.</span><span class="n">AppSettings</span><span class="p">[</span><span class="s">"User"</span><span class="p">];</span>
    <span class="k">public</span> <span class="kt">string</span> <span class="n">Password</span> <span class="p">=</span> <span class="n">ConfigurationManager</span><span class="p">.</span><span class="n">AppSettings</span><span class="p">[</span><span class="s">"Password"</span><span class="p">];</span>
    <span class="k">public</span> <span class="kt">int</span> <span class="n">Reintentos</span> <span class="p">=</span> <span class="m">3</span><span class="p">;</span>
    <span class="k">public</span> <span class="kt">bool</span> <span class="n">IsLoginActive</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>

    <span class="n">etc</span><span class="p">.</span>
    <span class="n">etc</span><span class="p">.</span>
    <span class="n">etc</span><span class="p">.</span>            
<span class="p">}</span>

<span class="k">public</span> <span class="k">static</span> <span class="k">class</span> <span class="nc">Main</span> <span class="p">{</span>
    <span class="kt">var</span> <span class="n">config</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">ConfigProvider</span><span class="p">();</span>

    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="n">config</span><span class="p">.</span><span class="n">Usuario</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<p>Sin embargo, con Net Core, se lo han currado un poco más y ahora queda centralizado a la hora de registrar la dependencias.</p>

<p>Primero de todo generamos una clase para la sección de las appsettings o para todo el appsettings, recordemos que si hacemos esta última, será accesible desde cualquier punto de la aplicación.</p>

<p>Appsettings.json
{
  “MySettings”: {
    “StringSetting”: “My Value”,
    “IntSetting”: 23
  }
}</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">public</span> <span class="k">class</span> <span class="nc">MySettings</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="kt">string</span> <span class="n">StringSetting</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
    <span class="k">public</span> <span class="kt">int</span> <span class="n">IntSetting</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p>Por otro lado registramos en el contenedor de servicios la clase que hemos definido anteriormente, aquí esta la magia:</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="n">services</span><span class="p">.</span><span class="n">Configure</span><span class="p">&lt;</span><span class="n">MySettings</span><span class="p">&gt;(</span>
        <span class="n">options</span> <span class="p">=&gt;</span> <span class="n">Configuration</span><span class="p">.</span><span class="nf">GetSection</span><span class="p">(</span><span class="s">"MySettings"</span><span class="p">)</span>
        <span class="p">.</span><span class="nf">Bind</span><span class="p">(</span><span class="n">options</span><span class="p">));</span>
</code></pre></div></div>

<p>En este punto al levantar la aplicación ésta gestiona el contenedor de dependencias y lee el archivo appsettings registrando una instancia de la clase MySettings.</p>

<p>Y ya.</p>

<p>A partir de aquí en las clases que necesitemos acceder a la configuración simplemente inyectaremos una interfaz IOptions<MySettings> y podremos acceder al servicio que se registro en el contenedor de dependencias:</MySettings></p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">public</span> <span class="k">class</span> <span class="nc">HomeController</span> <span class="p">:</span> <span class="n">Controller</span>
<span class="p">{</span>
    <span class="k">private</span> <span class="n">MySettings</span> <span class="n">_settings</span><span class="p">;</span>
    <span class="k">public</span> <span class="nf">HomeController</span><span class="p">(</span><span class="n">IOptions</span><span class="p">&lt;</span><span class="n">MySettings</span><span class="p">&gt;</span> <span class="n">settings</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">_settings</span> <span class="p">=</span> <span class="n">settings</span><span class="p">.</span><span class="n">Value</span>
        <span class="c1">// _settings.StringSetting == "My Value";</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p>Lo mejor de todo es que podemos inyectar esta configuración en páginas razor:</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">@page</span>
<span class="n">@model</span> <span class="n">IndexModel</span>
<span class="n">@using</span> <span class="n">Microsoft</span><span class="p">.</span><span class="n">Extensions</span><span class="p">.</span><span class="n">Options</span>
<span class="n">@inject</span> <span class="n">IOptionsMonitor</span><span class="p">&lt;</span><span class="n">MySettings</span><span class="p">&gt;</span> <span class="n">_settings</span>
<span class="err">@</span><span class="p">{</span>
    <span class="n">ViewData</span><span class="p">[</span><span class="s">"StringSetting"</span><span class="p">]</span> <span class="p">=</span> <span class="n">_settings</span><span class="p">.</span><span class="n">StringSetting</span><span class="p">;</span>
<span class="p">}</span>

<span class="p">&lt;</span><span class="n">h1</span><span class="p">&gt;</span><span class="n">@ViewData</span><span class="p">[</span><span class="s">"StringSetting"</span><span class="p">]&lt;/</span><span class="n">h1</span><span class="p">&gt;</span>
</code></pre></div></div>

<p>Saludos.</p>
:ET
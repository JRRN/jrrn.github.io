I"§#<p>El patr√≥n Observer se usa para crear una dependencia entre el objeto y otros que est√©n anexados a √©l. De esta forma, cuando se realiza una modificaci√≥n en el primer objeto, los objetos anexados a el, reciben esta actualizaci√≥n.</p>

<p>Aunque es clara la definici√≥n, lo que se trata es de que si realizamos un cambio de, por ejemplo una propiedad  ‚Äúnombre‚Äù, en el objeto principal, los dem√°s se enteran de que esa propiedad nombre ha cambiado de forma autom√°tica.</p>

<p>Vamos con el ejemplo:</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">public</span> <span class="k">abstract</span> <span class="k">class</span> <span class="nc">ObjetoPrincipal</span> <span class="p">{</span>
    <span class="k">protected</span> <span class="n">IList</span><span class="p">&lt;</span><span class="n">IObserver</span><span class="p">&gt;</span> <span class="n">observadores</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="n">IObserver</span><span class="p">&gt;();</span>

    <span class="k">public</span> <span class="k">void</span> <span class="nf">Agrega</span><span class="p">(</span><span class="n">IObserver</span> <span class="n">observador</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">observadores</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="n">observador</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">void</span> <span class="nf">Quita</span><span class="p">(</span><span class="n">IObserver</span> <span class="n">observador</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">observadores</span><span class="p">.</span><span class="nf">Remove</span><span class="p">(</span><span class="n">observador</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">void</span> <span class="nf">Actualiza</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="k">foreach</span> <span class="p">(</span><span class="kt">var</span> <span class="n">observador</span> <span class="k">in</span> <span class="n">observadores</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">observador</span><span class="p">.</span><span class="nf">Actualiza</span><span class="p">();</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="k">public</span> <span class="k">interface</span> <span class="nc">IObserver</span> <span class="p">{</span>
    <span class="k">void</span> <span class="nf">Actualiza</span><span class="p">();</span>
<span class="p">}</span>

<span class="k">public</span> <span class="k">class</span> <span class="nc">Book</span> <span class="p">:</span> <span class="n">ObjetoPrincipal</span> <span class="p">{</span>
    <span class="k">protected</span> <span class="kt">string</span> <span class="n">_descripcion</span><span class="p">;</span>
    <span class="k">protected</span> <span class="kt">string</span> <span class="n">_precio</span><span class="p">;</span>

    <span class="k">public</span> <span class="kt">string</span> <span class="n">Descripcion</span>
    <span class="p">{</span>
        <span class="k">get</span> <span class="p">=&gt;</span> <span class="n">_descripcion</span><span class="p">;</span>
        <span class="k">set</span> <span class="p">{</span> <span class="n">_descripcion</span> <span class="p">=</span> <span class="k">value</span><span class="p">;</span> <span class="k">this</span><span class="p">.</span><span class="nf">Actualiza</span><span class="p">();</span> <span class="p">}</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="kt">string</span> <span class="n">Precio</span>
    <span class="p">{</span>
        <span class="k">get</span> <span class="p">=&gt;</span> <span class="n">_descripcion</span><span class="p">;</span>
        <span class="k">set</span> <span class="p">{</span> <span class="n">_descripcion</span> <span class="p">=</span> <span class="k">value</span><span class="p">;</span> <span class="k">this</span><span class="p">.</span><span class="nf">Actualiza</span><span class="p">();</span> <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="k">public</span> <span class="k">class</span> <span class="nc">BookView</span> <span class="p">:</span> <span class="n">IObserver</span> <span class="p">{</span>
    <span class="k">protected</span> <span class="n">Book</span> <span class="n">book</span><span class="p">;</span>
    <span class="k">protected</span> <span class="kt">string</span> <span class="n">texto</span> <span class="p">=</span> <span class="n">String</span><span class="p">.</span><span class="n">Empty</span><span class="p">;</span>

    <span class="k">public</span> <span class="nf">BookView</span><span class="p">(</span><span class="n">Book</span> <span class="n">book</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">this</span><span class="p">.</span><span class="n">book</span> <span class="p">=</span> <span class="n">book</span><span class="p">;</span>
        <span class="n">book</span><span class="p">.</span><span class="nf">Agrega</span><span class="p">(</span><span class="k">this</span><span class="p">);</span>
        <span class="nf">ActualizaTexto</span><span class="p">();</span>
    <span class="p">}</span>

    <span class="k">protected</span> <span class="k">void</span> <span class="nf">ActualizaTexto</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="n">texto</span> <span class="p">=</span> <span class="s">$"Descripci√≥n </span><span class="p">{</span><span class="n">book</span><span class="p">.</span><span class="n">Descripcion</span><span class="p">}</span><span class="s">, precio </span><span class="p">{</span><span class="n">book</span><span class="p">.</span><span class="n">Precio</span><span class="p">}</span><span class="s">"</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">void</span> <span class="nf">Actualiza</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="nf">ActualizaTexto</span><span class="p">();</span>
        <span class="k">this</span><span class="p">.</span><span class="nf">Imprime</span><span class="p">();</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">void</span> <span class="nf">Imprime</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="n">texto</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="k">public</span> <span class="k">class</span> <span class="nc">Usuario</span> <span class="p">{</span>
    <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="n">args</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">Book</span> <span class="n">book</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">Book</span><span class="p">();</span>
        <span class="n">book</span><span class="p">.</span><span class="n">Descripcion</span> <span class="p">=</span> <span class="s">"Libro de IT"</span><span class="p">;</span>
        <span class="n">book</span><span class="p">.</span><span class="n">Precio</span> <span class="p">=</span> <span class="s">"10"</span><span class="p">;</span>

        <span class="n">BookView</span> <span class="n">bookView</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">BookView</span><span class="p">(</span><span class="n">book</span><span class="p">);</span>
        <span class="n">bookView</span><span class="p">.</span><span class="nf">Imprime</span><span class="p">();</span>

        <span class="n">book</span><span class="p">.</span><span class="n">Descripcion</span> <span class="p">=</span> <span class="s">"Libro de IT Barato"</span><span class="p">;</span>

        <span class="n">BookView</span> <span class="n">bookView2</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">BookView</span><span class="p">(</span><span class="n">book</span><span class="p">);</span>
        <span class="n">book</span><span class="p">.</span><span class="n">Descripcion</span> <span class="p">=</span> <span class="s">"Libro de IT Muy Barato"</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p>Como se puede ver si ejecutamos el c√≥digo, es que cada cambio de Descripcion desencadena una actualizaci√≥n en todos los objetos BookView.</p>

<p>Saludos.</p>
:ET
<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>JRRN Coding!</title>
 <link href="http://localhost:4000/atom.xml" rel="self"/>
 <id>http://localhost:4000</id>
 <updated>2019-04-06T08:40:41+02:00</updated>
 <author>
   <name>JRRN</name>
   <uri>https://jrrn.github.io</uri>
   <email></email>
 </author>

 

 <entry>
   <title>Conferencia Azure Bootcamp Barcelona 2019</title>
   <link href="http://localhost:4000/catazurebootcamp"/>
   <id>http://localhost:4000/catazurebootcamp</id>
   <updated>2019-04-01T00:00:00+02:00</updated>
   <content type="html">&lt;p&gt;Hola a todos. Simplemente comentar que nos han aceptado la charla en la conferencia Azure Bootcamp Barcelona 2019, que daremos &lt;a href=&quot;http://www.marcalmontserrat.com&quot;&gt;&lt;strong&gt;Marçcal Montserrat&lt;/strong&gt;&lt;/a&gt; y un servidor. Estamos ilusionados y con muchas ganas de dar lo mejor y que la gente salga de ella encantada.&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;http://catazurebootcamp.azurewebsites.net#agenda&quot;&gt;Agenda&lt;/a&gt;&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;&lt;strong&gt;De 0 a...</content>
 </entry>

 

 <entry>
   <title>Patrón de Opciones</title>
   <link href="http://localhost:4000/patron-ioptions"/>
   <id>http://localhost:4000/patron-ioptions</id>
   <updated>2019-03-31T00:00:00+01:00</updated>
   <content type="html">&lt;p&gt;¿Quien no recuerda los maravillosos Configuration Provider que nos hemos montado más de una vez para albergar en un clase todas las settings de nuestra aplicación y no tener desparramado por el código el acceso a estas (de esta forma, si cambiaba una setting se centralizaba en un punto y...</content>
 </entry>

 

 <entry>
   <title>Tipos de Infraestructura en el Cloud</title>
   <link href="http://localhost:4000/tipos-de-infraestructura-cloud"/>
   <id>http://localhost:4000/tipos-de-infraestructura-cloud</id>
   <updated>2019-01-21T00:00:00+01:00</updated>
   <content type="html">&lt;p&gt;En Azure Cloud, como en la mayoría de “Nubes” del mercado podemos encontrar una clasificación, según las responsabilidades que se quieran administrar. En la imagen siguiente, podemos observar las diferentes opciones que tenemos:&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/img/tiposinfraestructuracloud/iaaspaassaas.png&quot; alt=&quot;Infraestructura&quot; title=&quot;iaaspaassaas&quot; /&gt;&lt;/p&gt; &lt;p&gt;Así, en un entorno local, nosotros somos los responsables de todo.&lt;/p&gt; &lt;p&gt;A...</content>
 </entry>

 

 <entry>
   <title>Principios KISS - DRY - YAGNI - Red Green Refactor</title>
   <link href="http://localhost:4000/kiss-dry-yagni"/>
   <id>http://localhost:4000/kiss-dry-yagni</id>
   <updated>2018-11-12T00:00:00+01:00</updated>
   <content type="html">&lt;p&gt;Hola de nuevo, para acabar una más de principios para el diseño de software:&lt;/p&gt; &lt;p&gt;&lt;br /&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;KISS&lt;/strong&gt; - (Mantenlo simple, estúpido): Esto es algo que se explica por sí mismo: siempre es más fácil evitar errores, mejorar el rendimiento, agregar funciones y mantener un software más simple que algo complicado....</content>
 </entry>

 

 <entry>
   <title>Principios GRASP</title>
   <link href="http://localhost:4000/grasp"/>
   <id>http://localhost:4000/grasp</id>
   <updated>2018-11-11T00:00:00+01:00</updated>
   <content type="html">&lt;p&gt;Hola de nuevo. Después de los principios &lt;a href=&quot;./solid.html&quot;&gt;SOLID&lt;/a&gt;, vamos a dar un pasito más y vamos a tratar de explicar los principios GRASP (General Responsibility Assignment Software Patterns).&lt;/p&gt; &lt;p&gt;GRASP describe 7 patrones que són:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Alta cohesión y bajo acoplamiento&lt;/li&gt; &lt;li&gt;Controlador&lt;/li&gt; &lt;li&gt;Creador&lt;/li&gt; &lt;li&gt;Experto en información&lt;/li&gt; &lt;li&gt;Fabricación pura&lt;/li&gt; &lt;li&gt;Indirección&lt;/li&gt; &lt;li&gt;Polimorfismo&lt;/li&gt;...</content>
 </entry>

 

 <entry>
   <title>Principios SOLID</title>
   <link href="http://localhost:4000/solid"/>
   <id>http://localhost:4000/solid</id>
   <updated>2018-10-25T00:00:00+02:00</updated>
   <content type="html">&lt;p&gt;Hola hoy vengo con los principios SOLID. Aunque es un tema que conozco, el pasado sábado asistí a la &lt;a href=&quot;http://netconfbcn2018.azurewebsites.net/&quot;&gt;NET. Conf 2018&lt;/a&gt; y varias personas no tenían conocimiento sobre ellos y eso no se puede quedar así.&lt;/p&gt; &lt;p&gt;Los presentamos:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;S&lt;/strong&gt;ingle Responsability&lt;/li&gt; &lt;li&gt;&lt;strong&gt;O&lt;/strong&gt;pen Closed&lt;/li&gt; &lt;li&gt;&lt;strong&gt;L&lt;/strong&gt;iskow&lt;/li&gt; &lt;li&gt;&lt;strong&gt;I&lt;/strong&gt;nterface Segregation&lt;/li&gt; &lt;li&gt;&lt;strong&gt;D&lt;/strong&gt;ependency Injection&lt;/li&gt;...</content>
 </entry>

 

 <entry>
   <title>Patrón Visitor</title>
   <link href="http://localhost:4000/patron-visitor"/>
   <id>http://localhost:4000/patron-visitor</id>
   <updated>2018-08-19T00:00:00+02:00</updated>
   <content type="html">&lt;p&gt;El patrón Visitor nos permite agregar operaciones a objetos sin tener que modificar la clase concreta de estos objetos. Su uso se recomienda para pequeñas y pocas funcionalidades extra.&lt;/p&gt; &lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inteface&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Visitante&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Visita&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EditorialSinFilial&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;editorialSinFilial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;...</content>
 </entry>

 

 <entry>
   <title>Patrón Template Method</title>
   <link href="http://localhost:4000/patron-template-method"/>
   <id>http://localhost:4000/patron-template-method</id>
   <updated>2018-08-18T00:00:00+02:00</updated>
   <content type="html">&lt;p&gt;El patrón Template Method nos permite definir un esqueleto de métodos abstractos en los que cada clase concreta sobrecargará estos métodos para definir su comportamiento específico y cuya implementación difiera en algunos pasos.&lt;/p&gt; &lt;p&gt;De esta forma, definimos una clase con métodos abstractos como si fuera un contrato o interfaz, y...</content>
 </entry>

 

 <entry>
   <title>Patrón State</title>
   <link href="http://localhost:4000/patron-state"/>
   <id>http://localhost:4000/patron-state</id>
   <updated>2018-08-17T00:00:00+02:00</updated>
   <content type="html">&lt;p&gt;El patrón State nos ayuda a que un objeto se comporte de forma diferente según un flag de estado. De esta forma, según cual sea el flag de estado, el objeto se comportará de una forma o de otra.&lt;/p&gt; &lt;p&gt;El ejemplo más simple para entender este patrón, es en los...</content>
 </entry>

 

 <entry>
   <title>Patrón Strategy</title>
   <link href="http://localhost:4000/patron-strategy"/>
   <id>http://localhost:4000/patron-strategy</id>
   <updated>2018-08-16T00:00:00+02:00</updated>
   <content type="html">&lt;p&gt;El patrón Strategy nos permite definir varios algoritmos para aplicar sobre un objeto según nos convenga. De esta forma, podemos definir posibles acciones sobre las que decidiremos cual es la más correcta para aplicar según ciertas variables.&lt;/p&gt; &lt;p&gt;Aunque es un patrón bastante sencillo… Lo que realmente hace es definir algoritmos...</content>
 </entry>

 

</feed>
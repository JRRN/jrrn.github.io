<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>JRRN Coding! | A simple Jekyll blog</title>
 <link href="http://localhost:4000/atom.xml" rel="self"/>
 <id>http://localhost:4000</id>
 <updated>2017-12-06T12:14:46+01:00</updated>
 <author>
   <name>JRRN</name>
   <uri>https://jrrn.github.io</uri>
   <email></email>
 </author>

 

 <entry>
   <title>Patrón Facade</title>
   <link href="http://localhost:4000/patron-facade"/>
   <id>http://localhost:4000/patron-facade</id>
   <updated>2017-12-03T00:00:00+01:00</updated>
   <content type="html">&lt;p&gt;La función del patrón facade es resolver agrupando en una única interfaz como conjunto de objetos varias interfaces.&lt;/p&gt; &lt;p&gt;De esta forma el patrón facade encapsula las interfaces especificas y expone una unica interfaz como punto de entrada.&lt;/p&gt; &lt;p&gt;Para los mortales, simplemente se trata de que toda petición entre por una...</content>
 </entry>

 

 <entry>
   <title>Patrón Decorator</title>
   <link href="http://localhost:4000/patron-decorator"/>
   <id>http://localhost:4000/patron-decorator</id>
   <updated>2017-11-29T00:00:00+01:00</updated>
   <content type="html">&lt;p&gt;El patrón decorator nos permite agregar de forma dinámica funcionalidades suplementarias a un objeto sin tener que modificar la interfaz de un objeto y quedando de una forma transparente de cara al cliente.&lt;/p&gt; &lt;p&gt;Así, el patrón decorator es una forma más para poder crear una subclase y vitaminar un objeto...</content>
 </entry>

 

 <entry>
   <title>Patrón Composite</title>
   <link href="http://localhost:4000/patron-composite"/>
   <id>http://localhost:4000/patron-composite</id>
   <updated>2017-11-27T00:00:00+01:00</updated>
   <content type="html">&lt;p&gt;El patrón composite nos da la utilidad de generar un composición de objetos variables. Esta compsición, generalmente, se encuentra en forma de arbol y respeta un jerarquía.&lt;/p&gt; &lt;p&gt;A través de este poliformismo variable de la citada jerarquía el encapsulamiento a ojos del cliente es muy sencilla y puede usarlos sin...</content>
 </entry>

 

 <entry>
   <title>Docker Pills</title>
   <link href="http://localhost:4000/docker-pills"/>
   <id>http://localhost:4000/docker-pills</id>
   <updated>2017-11-19T00:00:00+01:00</updated>
   <content type="html">&lt;h3 id=&quot;docker&quot;&gt;Docker&lt;/h3&gt; &lt;p&gt;Hola, nuevamente un recordatorio rápido de comandos docker para la lucha con contenedores.&lt;/p&gt; &lt;p&gt;Show Containers: &lt;code&gt;docker container ls&lt;/code&gt;&lt;/p&gt; &lt;p&gt;Execute Commands: &lt;code&gt;docker container exec [containerId or containerName] [command]&lt;/code&gt;&lt;/p&gt; &lt;p&gt;Console on Container: &lt;code&gt;docker container exec -it [containerId or containerName] /bin/bash&lt;/code&gt;&lt;/p&gt; &lt;p&gt;Run Containers: &lt;code&gt;docker container run [containerName] :[imageVersion]&lt;/code&gt; &lt;code&gt;docker container run...</content>
 </entry>

 

 <entry>
   <title>Patrón Bridge</title>
   <link href="http://localhost:4000/patron-bridge"/>
   <id>http://localhost:4000/patron-bridge</id>
   <updated>2017-11-16T00:00:00+01:00</updated>
   <content type="html">&lt;p&gt;El patrón bridge es usado para separar la implementación de un objeto, de su representación y de su interfaz. Así, conseguimos que la implementación de este objeto quede intacta, mientras que la representación puede crecer de manera independiente sin que haya un acomplamiento y tengamos que hacer cambios en el...</content>
 </entry>

 

 <entry>
   <title>Un poquito de Git</title>
   <link href="http://localhost:4000/un-poquito-de-git"/>
   <id>http://localhost:4000/un-poquito-de-git</id>
   <updated>2017-11-14T00:00:00+01:00</updated>
   <content type="html">&lt;p&gt;Hola, hoy quiero traeros una recopilación de comandos relacionados con la función que realizan sobre un repositorio Git.&lt;/p&gt; &lt;p&gt;Con esta chuleta podremos recordar facilmente que comandos deberíamos usar en cada caso en nuestra lucha con los repositorios.&lt;/p&gt; &lt;table class=&quot;table table-striped&quot;&gt; &lt;thead&gt; &lt;tr class=&quot;row-1 odd&quot;&gt; &lt;th class=&quot;column-1&quot;&gt;Función&lt;/th&gt; &lt;th class=&quot;column-2&quot;&gt;Comando&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt;...</content>
 </entry>

 

 <entry>
   <title>Patrón Adapter</title>
   <link href="http://localhost:4000/patron-adapter"/>
   <id>http://localhost:4000/patron-adapter</id>
   <updated>2017-11-14T00:00:00+01:00</updated>
   <content type="html">&lt;p&gt;El patrón adapter se centra en convertir la interfaz de una clase en la interfaz que necesitaran los clientes. Se trata de ofrecer con una nueva interfaz la exposición de los objetos de los clientes.&lt;/p&gt; &lt;p&gt;En definitiva, lo que se prentende con este patrón es generar una nueva interfaz, sobre...</content>
 </entry>

 

 <entry>
   <title>Patrones de Estructura</title>
   <link href="http://localhost:4000/patrones-de-estructura"/>
   <id>http://localhost:4000/patrones-de-estructura</id>
   <updated>2017-11-13T00:00:00+01:00</updated>
   <content type="html">&lt;h3 id=&quot;patrones-de-estructura&quot;&gt;Patrones de estructura&lt;/h3&gt; &lt;p&gt;Los patrones de estructura tiene el objetivo de facilitar la separación de la interfaz de un objeto o varios de sus implementaciones.&lt;/p&gt; &lt;p&gt;De esta forma se proporcina de un mecanismo de encapsulación de objetos donde se aumenta la abstracción dentro de la aplicaión. Y el mecanismo...</content>
 </entry>

 

 <entry>
   <title>Move me To Azure</title>
   <link href="http://localhost:4000/move-me-to-azure"/>
   <id>http://localhost:4000/move-me-to-azure</id>
   <updated>2017-11-12T00:00:00+01:00</updated>
   <content type="html">&lt;p&gt;Hola de nuevo, cambiando un poco la temática que llevo siguiendo sobre patrones, me gustaría escribir algo que he descubierto y que es una píldora, fácil y rápida.&lt;/p&gt; &lt;p&gt;En &lt;a href=&quot;https://www.plainconcepts.com&quot; title=&quot;Plain Concepts&quot;&gt;Plain&lt;/a&gt; he estado trabajando en la integración con una herramienta &lt;em&gt;third party&lt;/em&gt;.&lt;/p&gt; &lt;p&gt;Es una aplicación que se auto...</content>
 </entry>

 

 <entry>
   <title>Patrón Singleton</title>
   <link href="http://localhost:4000/patron-singleton"/>
   <id>http://localhost:4000/patron-singleton</id>
   <updated>2017-11-10T00:00:00+01:00</updated>
   <content type="html">&lt;p&gt;El patrón singleton tiene como objetivo asegurar que una clase sólo posee una instancia y proporciona un método de clase único que devuelve la instancia.&lt;/p&gt; &lt;p&gt;Es un patrón simple y conocido. Si queremos que solo haya una instancia de un objeto y no se puedan generar más mientras haya una...</content>
 </entry>

 

</feed>
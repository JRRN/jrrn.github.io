<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>JRRN Coding! | A simple Jekyll blog</title>
 <link href="http://localhost:4000/atom.xml" rel="self"/>
 <id>http://localhost:4000</id>
 <updated>2018-02-26T20:06:32+01:00</updated>
 <author>
   <name>JRRN</name>
   <uri>https://jrrn.github.io</uri>
   <email></email>
 </author>

 

 <entry>
   <title>Sin retornos NULL con Maybe<T></title>
   <link href="http://localhost:4000/maybe"/>
   <id>http://localhost:4000/maybe</id>
   <updated>2018-02-25T00:00:00+01:00</updated>
   <content type="html">&lt;p&gt;Maybe es una estructura(Monad) que nos ayuda a no tener que trabajar con objetos NULL.&lt;/p&gt; &lt;p&gt;De esta forma, el objeto, hereda una propiedad HasValue para determinar si es NULO o no, ahorrándonos el típico if (a != null) que tan feo queda en nuestro código.&lt;/p&gt; &lt;p&gt;Así la estructura quedaría de...</content>
 </entry>

 

 <entry>
   <title>Patrón Interpreter</title>
   <link href="http://localhost:4000/patron-interpreter"/>
   <id>http://localhost:4000/patron-interpreter</id>
   <updated>2018-02-02T00:00:00+01:00</updated>
   <content type="html">&lt;p&gt;El patrón &lt;strong&gt;Interpreter&lt;/strong&gt; nos proporciona la utilidad de transformar, la gramática del lenguaje, de tal forma que podamos evaluar, condificando estas expresiones del lenguaje natural, en objetos.&lt;/p&gt; &lt;p&gt;En resumidas, nos da la facilidad de transformar el lenguaje que hablamos y con el que nos comunicamos, en lenguaje máquina.&lt;/p&gt; &lt;p&gt;Y no,...</content>
 </entry>

 

 <entry>
   <title>Patrón Command</title>
   <link href="http://localhost:4000/patron-command"/>
   <id>http://localhost:4000/patron-command</id>
   <updated>2018-01-23T00:00:00+01:00</updated>
   <content type="html">&lt;p&gt;El patrón &lt;strong&gt;Command&lt;/strong&gt; nos ayuda a transformar una solicitud en un objeto. Estas solicitudes tienen la propiedad de poder encolarse, ser borradas y actualizadas dentro de la cola de peticiones.&lt;/p&gt; &lt;p&gt;Volviendo a nuestro caso de libros, todos sabemos que ciertos libros en IT son altamente propensos a quedarse obsoletos, para...</content>
 </entry>

 

 <entry>
   <title>Patrón Chain of Responsability</title>
   <link href="http://localhost:4000/patron-chain-of-responsability"/>
   <id>http://localhost:4000/patron-chain-of-responsability</id>
   <updated>2018-01-14T00:00:00+01:00</updated>
   <content type="html">&lt;p&gt;El patrón &lt;strong&gt;Chain Of Responsability&lt;/strong&gt; nos ayuda a crear una secuencia de unión entre objetos tal que, si el objeto más interno de la cadena no es capaz de dar una respuesta, uno de los objetos de nivel superior será el encargado de darla. Esta respuesta será a nivel del...</content>
 </entry>

 

 <entry>
   <title>Raspberry Pi 3, LCD Display, C# y MS IoT</title>
   <link href="http://localhost:4000/RaspberryPi3-LCD-MS-IoT"/>
   <id>http://localhost:4000/RaspberryPi3-LCD-MS IoT</id>
   <updated>2018-01-03T00:00:00+01:00</updated>
   <content type="html">&lt;h3 id=&quot;raspberry-pi-3-lcd-c-y-ms-iot&quot;&gt;Raspberry Pi 3, LCD, C# y MS IoT&lt;/h3&gt; &lt;p&gt;Hola, hará un año o así, compré una Raspeberry Pi 3.&lt;/p&gt; &lt;p&gt;Mi idea era jugar un poco con ella tanto en su versión modo PC/Servidor como su versión IoT.&lt;/p&gt; &lt;p&gt;Durante este año, he jugado con ella, he probado varias distribuciones Raspbian,...</content>
 </entry>

 

 <entry>
   <title>Patrones de Comportamiento</title>
   <link href="http://localhost:4000/patrones-de-comportamiento"/>
   <id>http://localhost:4000/patrones-de-comportamiento</id>
   <updated>2017-12-17T00:00:00+01:00</updated>
   <content type="html">&lt;h3 id=&quot;patrones-de-comportamiento&quot;&gt;Patrones de comportamiento&lt;/h3&gt; &lt;p&gt;Los patrones de comportamiento, nos ayudan a solucionar los problemas con las estructuras de datos y los objetos. Nos proporcionan soluciones a para identificar y poder distribuir los algoritmos entre ellos y su proceso.&lt;/p&gt; &lt;p&gt;Mediante flujos de control y flujos de proceso se orquestan estos algoritmos...</content>
 </entry>

 

 <entry>
   <title>Patrón Proxy</title>
   <link href="http://localhost:4000/patron-proxy"/>
   <id>http://localhost:4000/patron-proxy</id>
   <updated>2017-12-15T00:00:00+01:00</updated>
   <content type="html">&lt;p&gt;El patrón &lt;strong&gt;proxy&lt;/strong&gt; se utiliza para diseñar un objeto que sustituye a otro objeto que controla su acceso. El objeto proxy es el que queda expuesto en la capa de servicios o presentación siendo idéntico y con mismo contrato que el original.&lt;/p&gt; &lt;p&gt;El claro ejemplo, son las entidades que solemos...</content>
 </entry>

 

 <entry>
   <title>Patrón Flyweight</title>
   <link href="http://localhost:4000/patron-flyweight"/>
   <id>http://localhost:4000/patron-flyweight</id>
   <updated>2017-12-06T00:00:00+01:00</updated>
   <content type="html">&lt;p&gt;El patrón &lt;strong&gt;Flyweight&lt;/strong&gt; está enfocado a resolver el problema de la granularidad de los objetos.&lt;/p&gt; &lt;p&gt;Recordemos que la granularidad en programación es la capacidad de definir objetos fragmentando en unidades más pequeñas la composición de este objeto de la forma más correcta.&lt;/p&gt; &lt;p&gt;En nuestro caso de libros, pongamos el ejemplo...</content>
 </entry>

 

 <entry>
   <title>Patrón Facade</title>
   <link href="http://localhost:4000/patron-facade"/>
   <id>http://localhost:4000/patron-facade</id>
   <updated>2017-12-03T00:00:00+01:00</updated>
   <content type="html">&lt;p&gt;La función del patrón &lt;strong&gt;facade&lt;/strong&gt; es resolver agrupando en una única interfaz como conjunto de objetos varias interfaces.&lt;/p&gt; &lt;p&gt;De esta forma el patrón facade encapsula las interfaces específicas y expone una única interfaz como punto de entrada.&lt;/p&gt; &lt;p&gt;Para los mortales, simplemente se trata de que toda petición entre por una...</content>
 </entry>

 

 <entry>
   <title>Patrón Decorator</title>
   <link href="http://localhost:4000/patron-decorator"/>
   <id>http://localhost:4000/patron-decorator</id>
   <updated>2017-11-29T00:00:00+01:00</updated>
   <content type="html">&lt;p&gt;El patrón &lt;strong&gt;decorator&lt;/strong&gt; nos permite agregar de forma dinámica funcionalidades suplementarias a un objeto sin tener que modificar la interfaz de un objeto y quedando de una forma transparente de cara al cliente.&lt;/p&gt; &lt;p&gt;Así, el patrón decorator es una forma más para poder crear una subclase y vitaminar un objeto...</content>
 </entry>

 

</feed>